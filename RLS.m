%递推最小二乘法

% %FLch3RLSeg3
% clear%清理工作间变量
% L=15;% M序列的周期
% y1=1;y2=1;y3=1;y4=0;%四个移位积存器的输出初始值
% for i=1:L;%开始循环，长度为L
%     x1=xor(y3,y4);%第一个移位积存器的输入是第3个与第4个移位积存器的输出的“或”
%     x2=y1;%第二个移位积存器的输入是第3个移位积存器的输出
%     x3=y2;%第三个移位积存器的输入是第2个移位积存器的输出
%     x4=y3;%第四个移位积存器的输入是第3个移位积存器的输出
%     u(i)=y4;
%     %y(i)=y4;%取出第四个移位积存器幅值为"0"和"1"的输出信号，
%     %if y(i)>0.5,u(i)=-0.03;%如果M序列的值为"1"时,辨识的输入信号取“-0.03”
%     %else u(i)=0.03;%当M序列的值为"0"时,辨识的输入信号取“0.03”
%     %end%小循环结束
%     y1=x1;y2=x2;y3=x3;y4=x4;%为下一次的输入信号做准备
% end%大循环结束，产生输入信号u 
% figure(1);%第1个图形
% stem(u),grid on%以径的形式显示出输入信号并给图形加上网格
% 
% z(3)=0;z(2)=0;z(1)=0;%取z的前三个初始值为零
% for k=4:15;%循环变量从4到15   
%     z(k)=-1.5*z(k-1)-1.0*z(k-2)-0.5*z(k-3)-1.5*u(k-1)-0.5*u(k-2);%给出理想的辨识输出采样信号    
% end
u=[0 1 1 1 1 1 1 1 1];
z=[2 2 2 2 2 2 2 2 2];
%RLS递推最小二乘辨识
c0=[0.001 0.001 0.001 0.001 0.001]';%直接给出被辨识参数的初始值,即一个充分小的实向量
p0=10^6*eye(5,5);%直接给出初始状态P0，即一个充分大的实数单位矩阵
E=0.000000005;%相对误差E=0.000000005
c=[c0,zeros(5,14)];%被辨识参数矩阵的初始值及大小
e=zeros(5,15);%相对误差的初始值及大小
for k=4:15; %开始求K 
    h1=[-z(k-1),-z(k-2),-z(k-3),u(k-1),u(k-2)]'; x=h1'*p0*h1+1; x1=inv(x); %开始求K(k)
    k1=p0*h1*x1;%求出K的值
    d1=z(k)-h1'*c0; c1=c0+k1*d1;%求被辨识参数c
    e1=c1-c0;%求参数当前值与上一次的值的差值
    e2=e1./c0 ;%求参数的相对变化
    e(:,k)=e2; %把当前相对变化的列向量加入误差矩阵的最后一列       
    c0=c1;%新获得的参数作为下一次递推的旧参数
    c(:,k)=c1;%把辨识参数c 列向量加入辨识参数矩阵的最后一列 
    p1=p0-k1*k1'*[h1'*p0*h1+1];%求出 p(k)的值
    p0=p1;%给下次用
    if abs(e2)<=E break;%若参数收敛满足要求，终止计算
    end%小循环结束
end%大循环结束
c%显示被辨识参数
e%显示辨识结果的收敛情况
e2;
%分离参数
a1=c(1,:); a2=c(2,:); a3=c(3,:); b1=c(4,:); b2=c(5,:);
ea1=e(1,:); ea2=e(2,:);ea3=e(3,:); eb1=e(4,:); eb2=e(5,:); 
figure(2);%第2个图形
i=1:15;%横坐标从1到15
plot(i,a1,'r',i,a2,':',i,a3,'b',i,b1,'g',i,b2,':') %画出a1，a2，a3,b1，b2的各次辨识结果
title('各参数最小二乘法辨识结果')%图形标题
figure(3); %第3个图形
i=1:15; %横坐标从1到15
plot(i,ea1,'r',i,ea2,'g',i,ea3,'g:',i,eb1,'b',i,eb2,'r:') %画出a1，a2，a3,b1，b2的各次辨识结果的收敛情况
title('辨识精度') %图形标题
